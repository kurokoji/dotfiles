[[plugins]]
repo = 'Shougo/ddc.vim'
depends = ['context_filetype.vim', 'denops.vim', 'pum.vim']
on_event = ['InsertEnter', 'CursorHold']
# hook_add {{{
hook_add = '''
'''
# }}}
# hook_source {{{
hook_source = '''
call ddc#custom#patch_global({
      \   'sources': ['around', 'vim-lsp', 'neosnippet', 'file'],
      \   'sourceOptions': {
      \     '_': {
      \       'matchers': ['matcher_head'],
      \       'sorters': ['sorter_rank']
      \     },
      \     'around': {
      \       'mark': 'A',
      \     },
      \     'vim-lsp': {
      \       'matchers': ['matcher_head'],
      \       'mark': 'LSP',
      \       'forceCompletionPattern': '\.\w*|:\w*|->\w*'
      \     },
      \     'file': {
      \       'mark': 'F',
      \       'isVolatile': v:true,
      \       'forceCompletionPattern': '\S/\S*',
      \     },
      \     'neosnippet': {
      \       'mark': 'NSnip'
      \     }
      \   },
      \   'sourceParams': {
      \     'around': {
      \       'maxSize': 500,
      \     }
      \   }
      \ })

call ddc#enable()
'''
# }}}

[[plugins]]
repo = 'Shougo/ddc-around'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'
on_source = 'ddc.vim'

[[plugins]]
repo = 'shun/ddc-vim-lsp'
on_source = 'ddc.vim'
depends = ['vim-lsp']

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
on_func = 'lsp#enable'
# hook_add {{{
hook_add = '''
if executable('bq-language-server')
  au User lsp_setup call lsp#register_server({
        \ 'name': 'bq-language-server',
        \ 'cmd': {server_info->['bq-language-server', '--stdio']},
        \ 'config': {
        \   "bqExtensionVSCode": {
        \     "diagnostic": {
        \       "forVSCode": v:false,
        \     }
        \   }
        \ },
        \ 'allowlist': ['sql', 'bigquery'],
        \ })
endif

function! s:on_lsp_buffer_enabled() abort
  setlocal signcolumn=yes

  nmap <silent> <Leader>rn <Plug>(lsp-rename)
  nmap <silent> gd <Plug>(lsp-definition)
  nmap <silent> gy <Plug>(lsp-type-definition)
  nmap <silent> gi <Plug>(lsp-implementation)
  nmap <silent> gr <Plug>(lsp-references)

  nmap <silent> F <Cmd>LspDocumentFormat<CR>
endfunction

augroup lsp_install
  au!
  autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
augroup END
'''
# }}}

[[plugins]]
repo = 'mattn/vim-lsp-settings'
on_source = 'vim-lsp'

[[plugins]]
repo = 'Shougo/pum.vim'

[[plugins]]
repo = 'LumaKernel/ddc-file'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
on_source = 'ddc.vim'
depends = ['neosnippet-snippets']
# hook_add {{{
hook_add = '''
imap <C-k> <Plug>(neosnippet_expand_or_jump)
smap <C-k> <Plug>(neosnippet_expand_or_jump)
xmap <C-k> <Plug>(neosnippet_expand_target)
'''
# }}}

[[plugins]]
repo = 'kurokoji/neosnippet-snippets'

