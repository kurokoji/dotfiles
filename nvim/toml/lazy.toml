[[plugins]]
repo = 'Shougo/deol.nvim'
on_cmd = 'Deol'
# hook_add {{{
hook_add = '''
let g:deol#enable_ddc_completion = v:true

function s:floating_deol() abort
  let width_per = 0.8
  let height_per = 0.6

  let winwidth = float2nr(&columns * width_per)
  let wincol = float2nr((&columns - (&columns * width_per)) / 2)
  let winheight = float2nr(&lines * height_per)
  let winrow = float2nr((&lines - (&lines * height_per)) / 2)

  execute 'Deol -toggle -split=floating -winwidth=' . winwidth . ' -winheight=' . winheight . ' -wincol=' . wincol . '-winrow' . winrow
endfunction

function! s:open_deol() abort
  let winheight = &lines / 2
  execute 'Deol -split=horizontal -toggle -winheight=' . winheight
endfunction

command DeolSplit :Deol -split -toggle
command DeolVertical :Deol -split=vertical -toggle
command DeolFloating :call <SID>floating_deol()

nnoremap <Leader>s <Cmd>DeolSplit<CR>
nnoremap <Leader>v <Cmd>DeolVertical<CR>
nnoremap <Leader>t <Cmd>DeolFloating<CR>

tnoremap <C-j> <Plug>(skkeleton-toggle)
'''
# }}}

[[plugins]]
repo = 'previm/previm'
on_ft = ['markdown']
# hook_add {{{
hook_add = '''
let g:previm_enable_realtime = 1
augroup PrevimSettings
  autocmd!
  autocmd BufNewFile,BufRead *.{md,mdwn,mkd,mkdn,mark*} set filetype=markdown
augroup END
'''
# }}}

[[plugins]]
repo = 'tpope/vim-surround'
on_i = 1

[[plugins]]
repo = 'vim-denops/denops.vim'
on_event = 'CursorHold'

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
if = 'has("nvim") && !has("win32")'
on_event = 'BufRead'
hook_post_update = 'TSUpdate'
# hook_post_source {{{
hook_post_source = '''
lua <<EOF
require'nvim-treesitter.configs'.setup {
  ensure_installed = 'maintained',
  sync_install = false,
  highlight = {
    enable = true,
    disable = {
    }
  },
}
EOF
'''
# }}}

[[plugins]]
repo = 'lukas-reineke/indent-blankline.nvim'
if = 'has("nvim")'
on_event = ['BufRead', 'BufNewFile', 'BufEnter']
# hook_source {{{
hook_source = '''
lua <<EOF
require('indent_blankline').setup {
  show_end_of_line = true,
  space_char_blankline = ' ',
}
EOF
'''
# }}}
