[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_ft = ['c', 'cpp']
# hook_add {{{
hook_add = '''
'''
# }}}
# hook_source {{{
hook_source = '''
let g:neoinclude#paths = {
      \ 'cpp': '.,/usr/local/opt/llvm/include/c++/v1,/usr/local/opt/opencv/include,/usr/local/opt/boost/include,/usr/local/opt/zbar/include/zbar,/usr/local/opt/zbar/include'
      \ }

if !exists('g:neoinclude#reverse_exprs')
  let g:neoinclude#reverse_exprs = {}
endif

if !exists('g:neoinclude#exts')
  let g:neoinclude#exts = {}
endif
" call neoinclude#util#set_default_dictionary('g:neoinclude#paths', 'python', '')
" call neoinclude#util#set_default_dictionary('g:neoinclude#paths', 'python3', '')
'''
# }}}

[[plugins]]
repo = 'Shougo/denite.nvim'
on_ft = ['Denite']
# hook_add {{{
hook_add = '''
nmap <silent> <C-u><C-n> :<C-u>Denite buffer<CR>
" nmap <silent> <C-u><C-p> :<C-u>Denite -resume -buffer-name=files file_rec<CR>
nmap <silent> <C-u><C-p> :<C-u>Denite file_rec<CR>
nmap <silent> <C-u><C-g> :<C-u>Denite grep<CR>
nmap <silent> <C-u><C-]> :<C-u>DeniteCursorWord grep<CR>
'''
# }}}
# hook_source {{{
hook_source = '''
call denite#custom#map('insert', '<C-j>', '<denite:move_to_next_line>', 'noremap')
call denite#custom#map('insert', '<C-k>', '<denite:move_to_previous_line>', 'noremap')
call denite#custom#map('_', '<C-h>', '<denite:do_action:split>')
call denite#custom#map('insert', '<C-h>', '<denite:do_action:split>')
call denite#custom#map('_', '<C-v>', '<denite:do_action:vsplit>')
call denite#custom#map('insert', '<C-v>', '<denite:do_action:vsplit>')

call denite#custom#var('file_rec', 'command', ['rg', '--files', '--glob', '!.git'])
call denite#custom#var('grep', 'command', ['rg', '--threads', '3'])
call denite#custom#var('grep', 'recursive_opts', [])
call denite#custom#var('grep', 'pattern_opt', [])
call denite#custom#var('grep', 'default_opts', ['--vimgrep', '--no-heading'])
'''
# }}}

[[plugins]]
repo = 'Shougo/defx.nvim'
on_ft = ['Defx']
# hook_add {{{
hook_add = '''
nnoremap <silent><C-b> :Defx -toggle -split=vertical -winwidth=30 -direction=topleft<CR>
autocmd FileType defx call s:defx_my_settings()
function! s:defx_my_settings() abort
  " Define mappings
  nnoremap <silent><buffer><expr> <CR>
  \ defx#do_action('open', 'wincmd w \| drop')
  nnoremap <silent><buffer><expr> c
  \ defx#do_action('copy')
  nnoremap <silent><buffer><expr> m
  \ defx#do_action('move')
  nnoremap <silent><buffer><expr> p
  \ defx#do_action('paste')
  nnoremap <silent><buffer><expr> E
  \ defx#do_action('open', 'vsplit')
  nnoremap <silent><buffer><expr> P
  \ defx#do_action('open', 'pedit')
  nnoremap <silent><buffer><expr> K
  \ defx#do_action('new_directory')
  nnoremap <silent><buffer><expr> N
  \ defx#do_action('new_file')
  nnoremap <silent><buffer><expr> h
  \ defx#do_action('cd', ['..'])
  nnoremap <silent><buffer><expr> .
  \ defx#do_action('toggle_ignored_files')
  nnoremap <silent><buffer><expr> ~
  \ defx#do_action('cd')
  nnoremap <silent><buffer><expr> q
  \ defx#do_action('quit')
  nnoremap <silent><buffer><expr> <Space>
  \ defx#do_action('toggle_select') . 'j'
  nnoremap <silent><buffer><expr> *
  \ defx#do_action('toggle_select_all')
  nnoremap <silent><buffer><expr> <C-l>
  \ defx#do_action('redraw')
  nnoremap <silent><buffer><expr> <C-g>
  \ defx#do_action('print')
endfunction
'''
# }}}
