[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'wsdjeg/dein-ui.vim'

# [[plugins]]
# repo = 'Shougo/vimproc.vim'
# build = 'make'

[[plugins]]
repo = 'ryanoasis/vim-devicons'
# hook_add {{{
hook_add = """
let g:DevIconsEnableDistro = v:false
"""
# }}}

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'mattn/vim-sonictemplate'
# hook_add {{{
hook_add = '''
let g:sonictemplate_vim_template_dir = [
      \ '~/.config/nvim/template'
      \]
'''
# }}}

[[plugins]]
repo = 'simeji/winresizer'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']
# hook_add {{{
hook_add = '''
let g:precious_enable_switchers = {
      \ 'javascript': {
      \   'setfiletype': 0
      \ }
      \ }
'''
# }}}

[[plugins]]
repo = 'ntpeters/vim-better-whitespace'
# hook_add {{{
hook_add = '''
let g:better_whitespace_filetypes_blacklist=['diff', 'gitcommit', 'denite', 'defx', 'help']
'''
# }}}

[[plugins]]
repo = 'luochen1990/rainbow'
# hook_add {{{
hook_add = '''
let g:rainbow_active = 1
let g:rainbow_conf = {
\  'separately': {
\    'sml': {
\      'parentheses': ['start=/(\ze[^*]/ end=/)/ fold', 'start=/\[/ end=/\]/ fold', 'start=/{/ end=/}/ fold']
\  }}
\}
'''
# }}}

[[plugins]]
repo = 'thinca/vim-quickrun'
# hook_add {{{
hook_add = '''
let g:quickrun_config = get(g:, 'quickrun_config', {})
let g:quickrun_no_default_key_mappings=1

let g:quickrun_config._ = {
      \ 'runner': 'nvimterm',
      \ 'runner/nvimterm/into': 1,
      \ 'runner/nvimterm/opener': 'auto',
      \ 'runner/nvimterm/vsplit_width': 150,
      \ }

let g:quickrun_config.d = {
      \ 'command': 'dmd',
      \ 'cmdopt': '-debug -run'
      \ }

let g:quickrun_config.cpp = {
      \ 'command': 'g++',
      \ 'cmdopt': '-std=c++2a -O3'
      \ }

let g:quickrun_config.scheme = {
      \ 'command': 'scheme',
      \ 'exec': '%c %o < %s',
      \ 'cmdopt': '--quiet'
      \ }

nnoremap <silent> <C-b> <Cmd>QuickRun<CR> i
'''
# }}}

[[plugins]]
repo = 'statiolake/vim-quickrun-runner-nvimterm'
if = 'has("nvim")'

# vim-fakeclipはxclip無いとneovimが死ぬ
# [[plugins]]
# repo = 'kurokoji/vim-fakeclip'
# # hook_add {{{
# hook_add = '''
# vnoremap <silent> <C-y> <Plug>(fakeclip-y)
# '''
# # }}}

[[plugins]]
repo = 'tyru/open-browser.vim'

[[plugins]]
repo = 'nvim-lua/plenary.nvim'
if = 'has("nvim")'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'kyazdani42/nvim-web-devicons'
if = 'has("nvim")'
